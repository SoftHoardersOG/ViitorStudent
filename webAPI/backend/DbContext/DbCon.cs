// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using backend.Entities;

#nullable disable

namespace backend.DbContext
{
    public partial class DbCon : Microsoft.EntityFrameworkCore.DbContext
    {
        public DbCon()
        {

        }

        public DbCon(DbContextOptions<DbCon> options)
            : base(options)
        {
            
        }

        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Club> Club { get; set; }
        public virtual DbSet<Interest> Interest { get; set; }
        public virtual DbSet<Job> Job { get; set; }
        public virtual DbSet<Meeting> Meeting { get; set; }
        public virtual DbSet<Reviews> Reviews { get; set; }
        public virtual DbSet<Subject> Subject { get; set; }
        public virtual DbSet<University> University { get; set; }
        public virtual DbSet<UniversityCity> UniversityCity { get; set; }
        public virtual DbSet<UniversityClub> UniversityClub { get; set; }
        public virtual DbSet<UniversityInterest> UniversityInterest { get; set; }
        public virtual DbSet<UniversityJob> UniversityJob { get; set; }
        public virtual DbSet<UniversitySubject> UniversitySubject { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserCity> UserCity { get; set; }
        public virtual DbSet<UserClub> UserClub { get; set; }
        public virtual DbSet<UserInterest> UserInterest { get; set; }
        public virtual DbSet<UserJob> UserJob { get; set; }
        public virtual DbSet<UserMetings> UserMetings { get; set; }
        public virtual DbSet<UserSubject> UserSubject { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<City>(entity =>
            {
                entity.HasKey(e => e.city_id)
                    .HasName("PK__City__031491A85C72A3CE");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Club>(entity =>
            {
                entity.HasKey(e => e.club_id)
                    .HasName("PK__Club__BCAD3DD980C7A6CE");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Interest>(entity =>
            {
                entity.HasKey(e => e.interest_id)
                    .HasName("PK__Interest__0F5A1FAD2CBE4E3D");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Job>(entity =>
            {
                entity.HasKey(e => e.job_id)
                    .HasName("PK__Job__6E32B6A53AD194A8");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Meeting>(entity =>
            {
                entity.HasKey(e => e.meeting_id)
                    .HasName("PK__Meeting__C7B91CAB76309911");

                entity.Property(e => e.date).HasColumnType("datetime");

                entity.Property(e => e.description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.link)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.university)
                    .WithMany(p => p.Meeting)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Meeting__univers__5CD6CB2B");
            });

            modelBuilder.Entity<Reviews>(entity =>
            {
                entity.HasKey(e => e.review_id)
                    .HasName("PK__Reviews__60883D909262BA68");

                entity.Property(e => e.body)
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.title)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.university)
                    .WithMany(p => p.Reviews)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Reviews__univers__45F365D3");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.Reviews)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Reviews__user_id__46E78A0C");
            });

            modelBuilder.Entity<Subject>(entity =>
            {
                entity.HasKey(e => e.subject_id)
                    .HasName("PK__Subject__5004F660298AA02A");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<University>(entity =>
            {
                entity.HasKey(e => e.university_id)
                    .HasName("PK__Universi__F24BB720A693EEF6");

                entity.Property(e => e.address)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.examInfo)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.group)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.longDescription)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.phoneNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.shortDescription)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.city)
                    .WithMany(p => p.University)
                    .HasForeignKey(d => d.city_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__city___4316F928");
            });

            modelBuilder.Entity<UniversityCity>(entity =>
            {
                entity.HasKey(e => e.universityCity_id)
                    .HasName("PK__Universi__2421FFBD769F9ED8");

                entity.HasOne(d => d.city)
                    .WithMany(p => p.UniversityCity)
                    .HasForeignKey(d => d.city_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__city___59063A47");

                entity.HasOne(d => d.university)
                    .WithMany(p => p.UniversityCity)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__unive__59FA5E80");
            });

            modelBuilder.Entity<UniversityClub>(entity =>
            {
                entity.HasKey(e => e.universityClub_id)
                    .HasName("PK__Universi__F21CC33779696F40");

                entity.HasOne(d => d.club)
                    .WithMany(p => p.UniversityClub)
                    .HasForeignKey(d => d.club_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__club___4D94879B");

                entity.HasOne(d => d.university)
                    .WithMany(p => p.UniversityClub)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__unive__4E88ABD4");
            });

            modelBuilder.Entity<UniversityInterest>(entity =>
            {
                entity.HasKey(e => e.universityInterest_id)
                    .HasName("PK__Universi__84B253F74987A45E");

                entity.HasOne(d => d.interest)
                    .WithMany(p => p.UniversityInterest)
                    .HasForeignKey(d => d.interest_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__inter__5165187F");

                entity.HasOne(d => d.university)
                    .WithMany(p => p.UniversityInterest)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__unive__52593CB8");
            });

            modelBuilder.Entity<UniversityJob>(entity =>
            {
                entity.HasKey(e => e.universityJob_id)
                    .HasName("PK__Universi__BD8AD008D9D92F67");

                entity.HasOne(d => d.job)
                    .WithMany(p => p.UniversityJob)
                    .HasForeignKey(d => d.job_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__job_i__5535A963");

                entity.HasOne(d => d.university)
                    .WithMany(p => p.UniversityJob)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__unive__5629CD9C");
            });

            modelBuilder.Entity<UniversitySubject>(entity =>
            {
                entity.HasKey(e => e.universitySubject_id)
                    .HasName("PK__Universi__E144E1FBDF558DE4");

                entity.HasOne(d => d.subject)
                    .WithMany(p => p.UniversitySubject)
                    .HasForeignKey(d => d.subject_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__subje__49C3F6B7");

                entity.HasOne(d => d.university)
                    .WithMany(p => p.UniversitySubject)
                    .HasForeignKey(d => d.university_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Universit__unive__4AB81AF0");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasKey(e => e.user_id)
                    .HasName("PK__User__B9BE370F003D7635");

                entity.Property(e => e.email)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.firstName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.join_date).HasColumnType("datetime");

                entity.Property(e => e.lastName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.password)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.role)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.username)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UserCity>(entity =>
            {
                entity.HasKey(e => e.userCity_id)
                    .HasName("PK__UserCity__94C7757D10BD5698");

                entity.HasOne(d => d.city)
                    .WithMany(p => p.UserCity)
                    .HasForeignKey(d => d.city_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserCity__city_i__3F466844");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserCity)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserCity__user_i__403A8C7D");
            });

            modelBuilder.Entity<UserClub>(entity =>
            {
                entity.HasKey(e => e.userClub_id)
                    .HasName("PK__UserClub__F1147A3688217021");

                entity.HasOne(d => d.club)
                    .WithMany(p => p.UserClub)
                    .HasForeignKey(d => d.club_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserClub__club_i__33D4B598");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserClub)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserClub__user_i__34C8D9D1");
            });

            modelBuilder.Entity<UserInterest>(entity =>
            {
                entity.HasKey(e => e.userInterest_id)
                    .HasName("PK__UserInte__EA8ECA38A5C76DBA");

                entity.HasOne(d => d.interest)
                    .WithMany(p => p.UserInterest)
                    .HasForeignKey(d => d.interest_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserInter__inter__37A5467C");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserInterest)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserInter__user___38996AB5");
            });

            modelBuilder.Entity<UserJob>(entity =>
            {
                entity.HasKey(e => e.userJob_id)
                    .HasName("PK__UserJob__E5C23F97981CF668");

                entity.HasOne(d => d.job)
                    .WithMany(p => p.UserJob)
                    .HasForeignKey(d => d.job_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserJob__job_id__3B75D760");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserJob)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserJob__user_id__3C69FB99");
            });

            modelBuilder.Entity<UserMetings>(entity =>
            {
                entity.HasKey(e => e.userMeeting_id)
                    .HasName("PK__UserMeti__035568EFC6E8BA85");

                entity.HasOne(d => d.meeting)
                    .WithMany(p => p.UserMetings)
                    .HasForeignKey(d => d.meeting_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserMetin__meeti__5FB337D6");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserMetings)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserMetin__user___60A75C0F");
            });

            modelBuilder.Entity<UserSubject>(entity =>
            {
                entity.HasKey(e => e.userSubject_id)
                    .HasName("PK__UserSubj__F7574CF86546F83C");

                entity.HasOne(d => d.subject)
                    .WithMany(p => p.UserSubject)
                    .HasForeignKey(d => d.subject_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserSubje__subje__300424B4");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.UserSubject)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserSubje__user___30F848ED");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}